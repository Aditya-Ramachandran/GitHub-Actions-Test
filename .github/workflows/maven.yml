# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Test CICD Project

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    # Stage 1: Build
    runs-on: ubuntu-latest
    name: Build Java Project

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Build with Maven
        run: mvn clean install

      - name: Save Build Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: built-jar
          path: target/github-cicd-test.jar

  dependency-scan:
    runs-on: ubuntu-latest
    needs: build
    name: Run Dependency-Check

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download Built Artifacts
        uses: actions/download-artifact@v3
        with:
          name: built-jar

      - name: List Directory Contents
        run: |
          echo "Listing contents of the working directory:"
          ls -R target

      - name: Pull OWASP Dependency-Check Docker Image
        run: |
          docker pull owasp/dependency-check

      - name: Run Dependency-Check in Docker
        run: |
          docker run --rm -v ${{ github.workspace }}:/src --workdir /src \
            owasp/dependency-check --project github-cicd-test --scan target/github-cicd-test.jar --format HTML --out dependency-check-report.html

      - name: Upload Dependency-Check Report
        uses: actions/upload-artifact@v3
        with:
          name: dependency-check-report
          path: dependency-check-report.html

  docker-publish:
    # Stage 3: Build & Push Docker Image
    if: success() || failure()
    runs-on: ubuntu-latest
    needs: dependency-scan
    name: Build and Push Docker Image

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download Built Artifacts
        uses: actions/download-artifact@v3
        with:
          name: built-jar
          path: target/github-cicd-test.jar

      - name: Build & Push Docker image
        uses: mr-smithers-excellent/docker-build-push@v6
        with:
          image: adityaramachandran/github-cicd-test
          tags: latest
          registry: docker.io
          dockerfile: Dockerfile
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

